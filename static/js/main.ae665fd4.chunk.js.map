{"version":3,"sources":["redux/todoActionTypes.js","redux/todoReducer.js","redux/todoStore.js","components/takeTodo/TakeTodo.jsx","redux/todoActions.js","components/listTodo/listItem/TaskView.jsx","components/listTodo/listItem/ListItem.jsx","components/listTodo/ListTodo.jsx","App.js","index.js"],"names":["ADD_TODO","EDIT_TODO","CHANGE_TODO_STATUS","DELETE_TODO","initialState","store","createStore","state","action","type","nextId","length","id","task","payload","active","map","todo","data","filter","connect","dispatch","addTodo","props","useState","input","setInput","autoFocus","placeholder","value","onChange","event","target","onKeyDown","code","document","getElementById","click","handleEnterKey","onClick","TaskView","className","onView","handleChange","disabled","editTodo","newVersion","deleteTodo","changeTodoStatus","itemId","activeStatus","setonView","taskValue","setTaskValue","todoId","editChanges","todoList","todoItem","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ae665fd4.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const CHANGE_TODO_STATUS = 'CHANGE_TODO_STATUS';\nexport const DELETE_TODO = 'DELETE_TODO'","import {\n    ADD_TODO,\n    CHANGE_TODO_STATUS,\n    DELETE_TODO,\n    EDIT_TODO\n} from './todoActionTypes'\n\n\nconst initialState = []\n\nexport default function todoReducer(state=initialState, action) {\n    switch(action.type) {\n        case ADD_TODO:\n            const nextId = state.length > 0\n                            ? state[state.length - 1].id + 1 // id of last item plus one\n                            : 0\n            return [\n                ...state,\n                {\n                    id: nextId,\n                    task: action.payload,\n                    active: true\n                }\n            ]\n        case EDIT_TODO:\n            return [\n                ...state.map(todo => {\n                    return todo.id === action.payload.id\n                    ? {...todo, task: action.payload.data}\n                    : todo\n                })\n            ]\n        case CHANGE_TODO_STATUS:\n            return [\n                ...state.map(todo => {\n                    return todo.id === action.payload\n                    ? {...todo, active: ! todo.active}\n                    : todo\n                })\n            ]\n        case DELETE_TODO:\n            return [\n                ...state.filter(todo => todo.id !== action.payload)\n            ]\n\n        default:\n            return state\n    }\n}\n","import { createStore } from 'redux';\nimport todoReducer from './todoReducer'\n\n\nexport const store = createStore(todoReducer);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../redux/todoActions';\nimport './takeTodo.scss';\n\n// I need an input and a button\n\nfunction TakeTodo(props) {\n    \n    const [input, setInput] = useState('')\n\n    const handleAddTodo = () => {\n        props.addTodo(input);\n        setInput('')\n    }\n    \n    const handleEnterKey = (event) => {\n        if (event.code === 'Enter') {\n            const btn = document.getElementById('add-todo');\n            btn.click();\n        }\n    }\n    \n    return (\n        <div>\n            <input\n                type=\"text\"\n                id=\"todo-edit\"\n                autoFocus\n                placeholder=\"Enter a todo\"\n                value={input}\n                onChange={event => setInput(event.target.value)}\n                onKeyDown={event => handleEnterKey(event)} />\n            <button id=\"add-todo\" onClick={handleAddTodo}>Add Todo</button>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addTodo: task => dispatch(addTodo(task))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(TakeTodo);\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_STATUS,\n    DELETE_TODO\n} from './todoActionTypes';\n\n// add todo\nexport const addTodo = task => {\n    return {\n        type: ADD_TODO,\n        payload: task\n    }\n}\n\n// edit todo\nexport const editTodo = (id, newVersion) => {\n    return {\n        type: EDIT_TODO,\n        payload: {\n            id: id,\n            data: newVersion,\n        }\n    }\n}\n\n// change todo status\nexport const changeTodoStatus = id => {\n    return {\n        type: CHANGE_TODO_STATUS,\n        payload: id\n    }\n}\n\n// delete todo\nexport const deleteTodo = id => {\n    return {\n        type: DELETE_TODO,\n        payload: id\n    }\n}\n","import React from 'react';\nimport '../scss/taskView.scss';\n\nfunction TaskView(props) {\n    return <input\n        className={\n            props.active\n            ? props.onView\n                ? \"active-task-onView-input\"\n                : \"active-task-onEdit-input\"\n            : \"finished-task\"\n        }\n        type=\"text\"\n        value={props.value}\n        onChange={event => props.handleChange(event.target.value)}\n        disabled={props.onView} />\n}\n\nexport default TaskView;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { editTodo, deleteTodo, changeTodoStatus } from '../../../redux/todoActions';\nimport TaskView from './TaskView';\nimport '../scss/listItem.scss';\n\nfunction ListItem(props) {\n    const itemId = props.data.id;\n    const task = props.data.task;\n    const activeStatus = props.data.active;\n\n    const [onView, setonView] = useState(true);\n    const [taskValue, setTaskValue] = useState(task)\n\n\n    // the save button sends an action and changes local state (edit)\n    const saveChanges = () => {\n        const todoId = itemId;\n        const editChanges = taskValue;\n        props.editTodo(todoId, editChanges);\n        setonView(true);\n    }\n\n    // undo reverts back to original state, sets onView to false\n    const undoChanges = () => {\n        setTaskValue(task)\n        setonView(true)\n    }\n\n    // delete sends an action\n    const deleteTodo = () => {\n        const todoId = itemId;\n        props.deleteTodo(todoId);\n    }\n\n    return (\n        <>\n            {\n                onView\n                ? <button\n                    className ={activeStatus ? \"active-status-btn\" : \"finished-status-btn\"}\n                    onClick={() => props.changeTodoStatus(itemId)}>\n                </button>\n                : null\n            }\n            <TaskView\n                active={activeStatus}\n                onView={onView}\n                value={taskValue}\n                handleChange={setTaskValue} />\n            {\n                props.data.active\n                ? onView\n                    ? <button\n                        className=\"task-item-btn edit-btn\"\n                        onClick={() => setonView(false)}>\n                            {/* edit */}\n                            <i className=\"fas fa-pencil-alt edit-logo\"></i>\n                    </button>\n                    : <button\n                        onClick={saveChanges}\n                        className=\"task-item-btn save-btn\">\n                            {/* save */}\n                            <i className=\"fas fa-save save-logo\"></i>\n                    </button>\n                : null\n            }\n            {\n                onView\n                ? <button\n                    onClick={deleteTodo}\n                    className=\"task-item-btn delete-btn\">\n                        {/* delete */}\n                        <i className=\"fas fa-trash-alt delete-logo\"></i>\n                </button>\n                : <button\n                    onClick={undoChanges}\n                    className=\"task-item-btn undo-btn\">\n                        {/* undo */}\n                        <i className=\"fas fa-undo undo-logo\"></i>\n                </button>\n            }\n        </>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        editTodo: (id, newVersion) => dispatch(editTodo(id, newVersion)),\n        deleteTodo: id => dispatch(deleteTodo(id)),\n        changeTodoStatus: id => dispatch(changeTodoStatus(id))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(ListItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ListItem from './listItem/ListItem';\nimport './scss/listTodo.scss';\n\nfunction ListTodo(props) {\n    return (\n        <ul id=\"list\">\n            {props.todoList.map(todoItem => {\n                return (\n                    <li\n                        key={todoItem.id}\n                        className={todoItem.active ? \"active-item\" : \"finished-item\"}>\n                            <ListItem data={todoItem} />\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        todoList: state\n    }\n}\n\nexport default connect(mapStateToProps)(ListTodo)\n","import { Provider } from 'react-redux';\nimport { store } from './redux/todoStore';\nimport TakeTodo from './components/takeTodo/TakeTodo'\nimport ListTodo from './components/listTodo/ListTodo'\nimport './scss/app.scss'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div id=\"main-app\">\n\n        <div id=\"head\">\n          <h1 id=\"app-title\">TODO List App</h1>\n          <TakeTodo />\n        </div>\n\n        <div id=\"todo-list\">\n          <ListTodo />\n        </div>\n\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"container\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}